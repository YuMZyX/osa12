services:
  app:
    image: todo-frontend-dev
    build:
      context: . # The context will pick this directory as the "build context"
      dockerfile: ./todo-frontend/dev.Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-frontend/:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    container_name: todo-frontend-dev # This will name the container

  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf
      - ./todo-frontend/src:/usr/share/nginx/html
    ports:
      - 8080:80
    container_name: reverse_proxy
    depends_on:
      - app
      - server

  mongodb:
    image: mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=the_username
      - MONGO_INITDB_ROOT_PASSWORD=the_password
    ports:
      - 27017:27017
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./todo-backend/mongo_data:/data/db

  redis:
    image: redis
    restart: unless-stopped
    build: .
    ports:
      - 6379:6379
    command: ['redis-server', '--appendonly', 'yes']
    volumes:
      - ./todo-backend/redis_data:/data

  server:
    image: todo-backend-dev
    depends_on:
      - mongodb
      - redis
    build:
      context: .
      dockerfile: ./todo-backend/dev.Dockerfile
    ports:
      - 3001:3001
    volumes:
      - ./todo-backend/:/usr/src/app
    environment:
      - REDIS_URL=redis://redis
      - MONGO_URL=mongodb://the_username:the_password@mongodb/the_database
    container_name: todo-backend-dev